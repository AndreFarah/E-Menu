//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool.
// Code is generated on: 19/11/2011 11:54:58 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace RestaurantpoContext
{

    [System.Data.Linq.Mapping.DatabaseAttribute(Name = "restaurantpos")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class DCDC : Devart.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();
        public static Devart.Data.Linq.CompiledQueryCache compiledQueryCache = Devart.Data.Linq.CompiledQueryCache.RegisterDataContext(typeof(DCDC));

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);

        partial void InsertTblcounter(Tblcounter instance);
        partial void UpdateTblcounter(Tblcounter instance);
        partial void DeleteTblcounter(Tblcounter instance);
        partial void InsertTblemployee(Tblemployee instance);
        partial void UpdateTblemployee(Tblemployee instance);
        partial void DeleteTblemployee(Tblemployee instance);
        partial void InsertTblfoodbeverage(Tblfoodbeverage instance);
        partial void UpdateTblfoodbeverage(Tblfoodbeverage instance);
        partial void DeleteTblfoodbeverage(Tblfoodbeverage instance);
        partial void InsertTblfoodbeveragegroup(Tblfoodbeveragegroup instance);
        partial void UpdateTblfoodbeveragegroup(Tblfoodbeveragegroup instance);
        partial void DeleteTblfoodbeveragegroup(Tblfoodbeveragegroup instance);
        partial void InsertTblfoodbeveragemenutype(Tblfoodbeveragemenutype instance);
        partial void UpdateTblfoodbeveragemenutype(Tblfoodbeveragemenutype instance);
        partial void DeleteTblfoodbeveragemenutype(Tblfoodbeveragemenutype instance);
        partial void InsertTblfoodbeveragerequest(Tblfoodbeveragerequest instance);
        partial void UpdateTblfoodbeveragerequest(Tblfoodbeveragerequest instance);
        partial void DeleteTblfoodbeveragerequest(Tblfoodbeveragerequest instance);
        partial void InsertTblfoodbeveragerequestrule(Tblfoodbeveragerequestrule instance);
        partial void UpdateTblfoodbeveragerequestrule(Tblfoodbeveragerequestrule instance);
        partial void DeleteTblfoodbeveragerequestrule(Tblfoodbeveragerequestrule instance);
        partial void InsertTbltable(Tbltable instance);
        partial void UpdateTbltable(Tbltable instance);
        partial void DeleteTbltable(Tbltable instance);
        partial void InsertTblfoodbeveragepurchasewithpurchaserule(Tblfoodbeveragepurchasewithpurchaserule instance);
        partial void UpdateTblfoodbeveragepurchasewithpurchaserule(Tblfoodbeveragepurchasewithpurchaserule instance);
        partial void DeleteTblfoodbeveragepurchasewithpurchaserule(Tblfoodbeveragepurchasewithpurchaserule instance);
        partial void InsertTblfoodbeveragepwpitem(Tblfoodbeveragepwpitem instance);
        partial void UpdateTblfoodbeveragepwpitem(Tblfoodbeveragepwpitem instance);
        partial void DeleteTblfoodbeveragepwpitem(Tblfoodbeveragepwpitem instance);

        #endregion

        public DCDC() :
        base(GetConnectionString("App_Code.DCDCConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName) {

            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public DCDC(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DCDC(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DCDC(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public DCDC(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Tblcounter> Tblcounters
        {
            get
            {
                return this.GetTable<Tblcounter>();
            }
        }

        public Devart.Data.Linq.Table<Tblemployee> Tblemployees
        {
            get
            {
                return this.GetTable<Tblemployee>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeverage> Tblfoodbeverages
        {
            get
            {
                return this.GetTable<Tblfoodbeverage>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragegroup> Tblfoodbeveragegroups
        {
            get
            {
                return this.GetTable<Tblfoodbeveragegroup>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragemenutype> Tblfoodbeveragemenutypes
        {
            get
            {
                return this.GetTable<Tblfoodbeveragemenutype>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragerequest> Tblfoodbeveragerequests
        {
            get
            {
                return this.GetTable<Tblfoodbeveragerequest>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragerequestrule> Tblfoodbeveragerequestrules
        {
            get
            {
                return this.GetTable<Tblfoodbeveragerequestrule>();
            }
        }

        public Devart.Data.Linq.Table<Tbltable> Tbltables
        {
            get
            {
                return this.GetTable<Tbltable>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragepurchasewithpurchaserule> Tblfoodbeveragepurchasewithpurchaserules
        {
            get
            {
                return this.GetTable<Tblfoodbeveragepurchasewithpurchaserule>();
            }
        }

        public Devart.Data.Linq.Table<Tblfoodbeveragepwpitem> Tblfoodbeveragepwpitems
        {
            get
            {
                return this.GetTable<Tblfoodbeveragepwpitem>();
            }
        }
    }


    /// <summary>
    /// There are no comments for Tblcounter in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblcounter")]
    public partial class Tblcounter : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Countercode;

        private string _Revenuecentercode;

        private string _Counterdescription;

        private string _Counterpassword;

        private string _Shiftcontrol;

        private string _Eodcontrol;

        private string _Ispocketpcterminal;

        private string _Pocketpcterminalactivationcode;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCountercodeChanging(string value);
        partial void OnCountercodeChanged();
        partial void OnRevenuecentercodeChanging(string value);
        partial void OnRevenuecentercodeChanged();
        partial void OnCounterdescriptionChanging(string value);
        partial void OnCounterdescriptionChanged();
        partial void OnCounterpasswordChanging(string value);
        partial void OnCounterpasswordChanged();
        partial void OnShiftcontrolChanging(string value);
        partial void OnShiftcontrolChanged();
        partial void OnEodcontrolChanging(string value);
        partial void OnEodcontrolChanged();
        partial void OnIspocketpcterminalChanging(string value);
        partial void OnIspocketpcterminalChanged();
        partial void OnPocketpcterminalactivationcodeChanging(string value);
        partial void OnPocketpcterminalactivationcodeChanged();
        #endregion

        public Tblcounter()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Countercode in the schema.
        /// </summary>
        [Column(Name = @"CounterCode", Storage = "_Countercode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Countercode
        {
            get
            {
                return this._Countercode;
            }
            set
            {
                if (this._Countercode != value)
                {
                    this.OnCountercodeChanging(value);
                    this.SendPropertyChanging();
                    this._Countercode = value;
                    this.SendPropertyChanged("Countercode");
                    this.OnCountercodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Revenuecentercode in the schema.
        /// </summary>
        [Column(Name = @"RevenueCenterCode", Storage = "_Revenuecentercode", CanBeNull = false, DbType = "VARCHAR(20) NOT NULL")]
        public string Revenuecentercode
        {
            get
            {
                return this._Revenuecentercode;
            }
            set
            {
                if (this._Revenuecentercode != value)
                {
                    this.OnRevenuecentercodeChanging(value);
                    this.SendPropertyChanging();
                    this._Revenuecentercode = value;
                    this.SendPropertyChanged("Revenuecentercode");
                    this.OnRevenuecentercodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Counterdescription in the schema.
        /// </summary>
        [Column(Name = @"CounterDescription", Storage = "_Counterdescription", DbType = "LONGTEXT", UpdateCheck = UpdateCheck.Never)]
        public string Counterdescription
        {
            get
            {
                return this._Counterdescription;
            }
            set
            {
                if (this._Counterdescription != value)
                {
                    this.OnCounterdescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Counterdescription = value;
                    this.SendPropertyChanged("Counterdescription");
                    this.OnCounterdescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Counterpassword in the schema.
        /// </summary>
        [Column(Name = @"CounterPassword", Storage = "_Counterpassword", DbType = "TINYTEXT", UpdateCheck = UpdateCheck.Never)]
        public string Counterpassword
        {
            get
            {
                return this._Counterpassword;
            }
            set
            {
                if (this._Counterpassword != value)
                {
                    this.OnCounterpasswordChanging(value);
                    this.SendPropertyChanging();
                    this._Counterpassword = value;
                    this.SendPropertyChanged("Counterpassword");
                    this.OnCounterpasswordChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Shiftcontrol in the schema.
        /// </summary>
        [Column(Name = @"ShiftControl", Storage = "_Shiftcontrol", DbType = "VARCHAR(255)")]
        public string Shiftcontrol
        {
            get
            {
                return this._Shiftcontrol;
            }
            set
            {
                if (this._Shiftcontrol != value)
                {
                    this.OnShiftcontrolChanging(value);
                    this.SendPropertyChanging();
                    this._Shiftcontrol = value;
                    this.SendPropertyChanged("Shiftcontrol");
                    this.OnShiftcontrolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eodcontrol in the schema.
        /// </summary>
        [Column(Name = @"EODControl", Storage = "_Eodcontrol", DbType = "VARCHAR(255)")]
        public string Eodcontrol
        {
            get
            {
                return this._Eodcontrol;
            }
            set
            {
                if (this._Eodcontrol != value)
                {
                    this.OnEodcontrolChanging(value);
                    this.SendPropertyChanging();
                    this._Eodcontrol = value;
                    this.SendPropertyChanged("Eodcontrol");
                    this.OnEodcontrolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ispocketpcterminal in the schema.
        /// </summary>
        [Column(Name = @"IsPocketPCTerminal", Storage = "_Ispocketpcterminal", DbType = "VARCHAR(255)")]
        public string Ispocketpcterminal
        {
            get
            {
                return this._Ispocketpcterminal;
            }
            set
            {
                if (this._Ispocketpcterminal != value)
                {
                    this.OnIspocketpcterminalChanging(value);
                    this.SendPropertyChanging();
                    this._Ispocketpcterminal = value;
                    this.SendPropertyChanged("Ispocketpcterminal");
                    this.OnIspocketpcterminalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Pocketpcterminalactivationcode in the schema.
        /// </summary>
        [Column(Name = @"PocketPCTerminalActivationCode", Storage = "_Pocketpcterminalactivationcode", DbType = "VARCHAR(255)")]
        public string Pocketpcterminalactivationcode
        {
            get
            {
                return this._Pocketpcterminalactivationcode;
            }
            set
            {
                if (this._Pocketpcterminalactivationcode != value)
                {
                    this.OnPocketpcterminalactivationcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Pocketpcterminalactivationcode = value;
                    this.SendPropertyChanged("Pocketpcterminalactivationcode");
                    this.OnPocketpcterminalactivationcodeChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tblemployee in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblemployee")]
    public partial class Tblemployee : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Employeecode;

        private string _Employeename;

        private string _Employeedetails;

        private string _Usergroupcode;

        private string _Payrollgroupcode;

        private string _Userpin;

        private string _Activitystatus;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnEmployeecodeChanging(string value);
        partial void OnEmployeecodeChanged();
        partial void OnEmployeenameChanging(string value);
        partial void OnEmployeenameChanged();
        partial void OnEmployeedetailsChanging(string value);
        partial void OnEmployeedetailsChanged();
        partial void OnUsergroupcodeChanging(string value);
        partial void OnUsergroupcodeChanged();
        partial void OnPayrollgroupcodeChanging(string value);
        partial void OnPayrollgroupcodeChanged();
        partial void OnUserpinChanging(string value);
        partial void OnUserpinChanged();
        partial void OnActivitystatusChanging(string value);
        partial void OnActivitystatusChanged();
        #endregion

        public Tblemployee()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Employeecode in the schema.
        /// </summary>
        [Column(Name = @"EmployeeCode", Storage = "_Employeecode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Employeecode
        {
            get
            {
                return this._Employeecode;
            }
            set
            {
                if (this._Employeecode != value)
                {
                    this.OnEmployeecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Employeecode = value;
                    this.SendPropertyChanged("Employeecode");
                    this.OnEmployeecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Employeename in the schema.
        /// </summary>
        [Column(Name = @"EmployeeName", Storage = "_Employeename", CanBeNull = false, DbType = "LONGTEXT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Employeename
        {
            get
            {
                return this._Employeename;
            }
            set
            {
                if (this._Employeename != value)
                {
                    this.OnEmployeenameChanging(value);
                    this.SendPropertyChanging();
                    this._Employeename = value;
                    this.SendPropertyChanged("Employeename");
                    this.OnEmployeenameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Employeedetails in the schema.
        /// </summary>
        [Column(Name = @"EmployeeDetails", Storage = "_Employeedetails", DbType = "LONGTEXT", UpdateCheck = UpdateCheck.Never)]
        public string Employeedetails
        {
            get
            {
                return this._Employeedetails;
            }
            set
            {
                if (this._Employeedetails != value)
                {
                    this.OnEmployeedetailsChanging(value);
                    this.SendPropertyChanging();
                    this._Employeedetails = value;
                    this.SendPropertyChanged("Employeedetails");
                    this.OnEmployeedetailsChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Usergroupcode in the schema.
        /// </summary>
        [Column(Name = @"UserGroupCode", Storage = "_Usergroupcode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Usergroupcode
        {
            get
            {
                return this._Usergroupcode;
            }
            set
            {
                if (this._Usergroupcode != value)
                {
                    this.OnUsergroupcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Usergroupcode = value;
                    this.SendPropertyChanged("Usergroupcode");
                    this.OnUsergroupcodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Payrollgroupcode in the schema.
        /// </summary>
        [Column(Name = @"PayrollGroupCode", Storage = "_Payrollgroupcode", DbType = "VARCHAR(255)")]
        public string Payrollgroupcode
        {
            get
            {
                return this._Payrollgroupcode;
            }
            set
            {
                if (this._Payrollgroupcode != value)
                {
                    this.OnPayrollgroupcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Payrollgroupcode = value;
                    this.SendPropertyChanged("Payrollgroupcode");
                    this.OnPayrollgroupcodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Userpin in the schema.
        /// </summary>
        [Column(Name = @"UserPIN", Storage = "_Userpin", DbType = "TINYTEXT", UpdateCheck = UpdateCheck.Never)]
        public string Userpin
        {
            get
            {
                return this._Userpin;
            }
            set
            {
                if (this._Userpin != value)
                {
                    this.OnUserpinChanging(value);
                    this.SendPropertyChanging();
                    this._Userpin = value;
                    this.SendPropertyChanged("Userpin");
                    this.OnUserpinChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activitystatus in the schema.
        /// </summary>
        [Column(Name = @"ActivityStatus", Storage = "_Activitystatus", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Activitystatus
        {
            get
            {
                return this._Activitystatus;
            }
            set
            {
                if (this._Activitystatus != value)
                {
                    this.OnActivitystatusChanging(value);
                    this.SendPropertyChanging();
                    this._Activitystatus = value;
                    this.SendPropertyChanged("Activitystatus");
                    this.OnActivitystatusChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeverage in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeverage")]
    public partial class Tblfoodbeverage : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Foodbeveragecode;

        private string _Groupcode;

        private string _Foodbeveragedescription;

        private string _Foodbeveragealternatedescription;

        private string _Foodbeverageallowitemdiscount;

        private string _Foodbeverageallowtotaldiscount;

        private string _Foodbeveragerequirepriorityoncancellation;

        private System.Nullable<int> _Foodbeveragetimebillingduration;

        private System.Nullable<int> _Foodbeveragepreparationduration;

        private string _Foodbeverageshowonpos;

        private string _Foodbeverageisweighingitem;

        private System.Nullable<double> _Foodbeverageprice;

        private System.Nullable<double> _Foodbeveragehappyhourprice;

        private System.Nullable<double> _Foodbeveragesecondhappyhourprice;

        private System.Nullable<double> _Foodbeveragethirdhappyhourprice;

        private System.Nullable<double> _Foodbeveragehappyhourpercentage;

        private System.Nullable<double> _Foodbeveragesecondhappyhourpercentage;

        private System.Nullable<double> _Foodbeveragethirdhappyhourpercentage;

        private System.Nullable<double> _Foodbeveragememberprice1;

        private System.Nullable<double> _Foodbeveragememberprice2;

        private System.Nullable<double> _Foodbeveragememberprice3;

        private System.Nullable<double> _Foodbeveragememberprice4;

        private System.Nullable<double> _Foodbeveragememberpoint;

        private byte[] _Foodbeveragepicture;

        private string _Foodbeveragekitchenorderprintingdestination;

        private string _Foodbeverageprintonorderlist;

        private string _Foodbeverageprintonkitchenorderlist;

        private string _Foodbeverageprintonbarorderlist;

        private string _Foodbeverageinvisibleday;

        private string _Foodbeveragevatscheme;

        private string _Foodbeveragelocaltax;

        private string _Foodbeverageavailable;

        private string _Foodbeverageisnettprice;

        private string _Foodbeveragewaivegovernmenttax;

        private string _Foodbeveragewaiveservicecharge;

        private string _Foodbeverageiscashvoucher;

        private string _Foodbeverageispaxcontrol;

        private System.Nullable<System.TimeSpan> _Foodbeverageinvisibletimingfrom;

        private System.Nullable<System.TimeSpan> _Foodbeverageinvisibletimingto;

        private System.Nullable<int> _Foodbeveragetableoccupationperiod;

        private EntityRef<Tblfoodbeveragegroup> _Tblfoodbeveragegroup;

        private EntitySet<Tblfoodbeveragerequest> _Tblfoodbeveragerequests;

        private EntitySet<Tblfoodbeveragerequestrule> _Tblfoodbeveragerequestrules;

        private EntitySet<Tblfoodbeveragepurchasewithpurchaserule> _Tblfoodbeveragepurchasewithpurchaserules;

        private EntitySet<Tblfoodbeveragepwpitem> _Tblfoodbeveragepwpitems;

        private EntitySet<Tblfoodbeveragepwpitem> _Tblfoodbeveragepwpitems1;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFoodbeveragecodeChanging(string value);
        partial void OnFoodbeveragecodeChanged();
        partial void OnGroupcodeChanging(string value);
        partial void OnGroupcodeChanged();
        partial void OnFoodbeveragedescriptionChanging(string value);
        partial void OnFoodbeveragedescriptionChanged();
        partial void OnFoodbeveragealternatedescriptionChanging(string value);
        partial void OnFoodbeveragealternatedescriptionChanged();
        partial void OnFoodbeverageallowitemdiscountChanging(string value);
        partial void OnFoodbeverageallowitemdiscountChanged();
        partial void OnFoodbeverageallowtotaldiscountChanging(string value);
        partial void OnFoodbeverageallowtotaldiscountChanged();
        partial void OnFoodbeveragerequirepriorityoncancellationChanging(string value);
        partial void OnFoodbeveragerequirepriorityoncancellationChanged();
        partial void OnFoodbeveragetimebillingdurationChanging(System.Nullable<int> value);
        partial void OnFoodbeveragetimebillingdurationChanged();
        partial void OnFoodbeveragepreparationdurationChanging(System.Nullable<int> value);
        partial void OnFoodbeveragepreparationdurationChanged();
        partial void OnFoodbeverageshowonposChanging(string value);
        partial void OnFoodbeverageshowonposChanged();
        partial void OnFoodbeverageisweighingitemChanging(string value);
        partial void OnFoodbeverageisweighingitemChanged();
        partial void OnFoodbeveragepriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragepriceChanged();
        partial void OnFoodbeveragehappyhourpriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragehappyhourpriceChanged();
        partial void OnFoodbeveragesecondhappyhourpriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragesecondhappyhourpriceChanged();
        partial void OnFoodbeveragethirdhappyhourpriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragethirdhappyhourpriceChanged();
        partial void OnFoodbeveragehappyhourpercentageChanging(System.Nullable<double> value);
        partial void OnFoodbeveragehappyhourpercentageChanged();
        partial void OnFoodbeveragesecondhappyhourpercentageChanging(System.Nullable<double> value);
        partial void OnFoodbeveragesecondhappyhourpercentageChanged();
        partial void OnFoodbeveragethirdhappyhourpercentageChanging(System.Nullable<double> value);
        partial void OnFoodbeveragethirdhappyhourpercentageChanged();
        partial void OnFoodbeveragememberprice1Changing(System.Nullable<double> value);
        partial void OnFoodbeveragememberprice1Changed();
        partial void OnFoodbeveragememberprice2Changing(System.Nullable<double> value);
        partial void OnFoodbeveragememberprice2Changed();
        partial void OnFoodbeveragememberprice3Changing(System.Nullable<double> value);
        partial void OnFoodbeveragememberprice3Changed();
        partial void OnFoodbeveragememberprice4Changing(System.Nullable<double> value);
        partial void OnFoodbeveragememberprice4Changed();
        partial void OnFoodbeveragememberpointChanging(System.Nullable<double> value);
        partial void OnFoodbeveragememberpointChanged();
        partial void OnFoodbeveragepictureChanging(byte[] value);
        partial void OnFoodbeveragepictureChanged();
        partial void OnFoodbeveragekitchenorderprintingdestinationChanging(string value);
        partial void OnFoodbeveragekitchenorderprintingdestinationChanged();
        partial void OnFoodbeverageprintonorderlistChanging(string value);
        partial void OnFoodbeverageprintonorderlistChanged();
        partial void OnFoodbeverageprintonkitchenorderlistChanging(string value);
        partial void OnFoodbeverageprintonkitchenorderlistChanged();
        partial void OnFoodbeverageprintonbarorderlistChanging(string value);
        partial void OnFoodbeverageprintonbarorderlistChanged();
        partial void OnFoodbeverageinvisibledayChanging(string value);
        partial void OnFoodbeverageinvisibledayChanged();
        partial void OnFoodbeveragevatschemeChanging(string value);
        partial void OnFoodbeveragevatschemeChanged();
        partial void OnFoodbeveragelocaltaxChanging(string value);
        partial void OnFoodbeveragelocaltaxChanged();
        partial void OnFoodbeverageavailableChanging(string value);
        partial void OnFoodbeverageavailableChanged();
        partial void OnFoodbeverageisnettpriceChanging(string value);
        partial void OnFoodbeverageisnettpriceChanged();
        partial void OnFoodbeveragewaivegovernmenttaxChanging(string value);
        partial void OnFoodbeveragewaivegovernmenttaxChanged();
        partial void OnFoodbeveragewaiveservicechargeChanging(string value);
        partial void OnFoodbeveragewaiveservicechargeChanged();
        partial void OnFoodbeverageiscashvoucherChanging(string value);
        partial void OnFoodbeverageiscashvoucherChanged();
        partial void OnFoodbeverageispaxcontrolChanging(string value);
        partial void OnFoodbeverageispaxcontrolChanged();
        partial void OnFoodbeverageinvisibletimingfromChanging(System.Nullable<System.TimeSpan> value);
        partial void OnFoodbeverageinvisibletimingfromChanged();
        partial void OnFoodbeverageinvisibletimingtoChanging(System.Nullable<System.TimeSpan> value);
        partial void OnFoodbeverageinvisibletimingtoChanged();
        partial void OnFoodbeveragetableoccupationperiodChanging(System.Nullable<int> value);
        partial void OnFoodbeveragetableoccupationperiodChanged();
        #endregion

        public Tblfoodbeverage()
        {
            this._Tblfoodbeveragegroup  = default(EntityRef<Tblfoodbeveragegroup>);
            this._Tblfoodbeveragerequests = new EntitySet<Tblfoodbeveragerequest>(new Action<Tblfoodbeveragerequest>(this.attach_Tblfoodbeveragerequests), new Action<Tblfoodbeveragerequest>(this.detach_Tblfoodbeveragerequests));
            this._Tblfoodbeveragerequestrules = new EntitySet<Tblfoodbeveragerequestrule>(new Action<Tblfoodbeveragerequestrule>(this.attach_Tblfoodbeveragerequestrules), new Action<Tblfoodbeveragerequestrule>(this.detach_Tblfoodbeveragerequestrules));
            this._Tblfoodbeveragepurchasewithpurchaserules = new EntitySet<Tblfoodbeveragepurchasewithpurchaserule>(new Action<Tblfoodbeveragepurchasewithpurchaserule>(this.attach_Tblfoodbeveragepurchasewithpurchaserules), new Action<Tblfoodbeveragepurchasewithpurchaserule>(this.detach_Tblfoodbeveragepurchasewithpurchaserules));
            this._Tblfoodbeveragepwpitems = new EntitySet<Tblfoodbeveragepwpitem>(new Action<Tblfoodbeveragepwpitem>(this.attach_Tblfoodbeveragepwpitems), new Action<Tblfoodbeveragepwpitem>(this.detach_Tblfoodbeveragepwpitems));
            this._Tblfoodbeveragepwpitems1 = new EntitySet<Tblfoodbeveragepwpitem>(new Action<Tblfoodbeveragepwpitem>(this.attach_Tblfoodbeveragepwpitems1), new Action<Tblfoodbeveragepwpitem>(this.detach_Tblfoodbeveragepwpitems1));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragecode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageCode", Storage = "_Foodbeveragecode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Foodbeveragecode
        {
            get
            {
                return this._Foodbeveragecode;
            }
            set
            {
                if (this._Foodbeveragecode != value)
                {
                    this.OnFoodbeveragecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragecode = value;
                    this.SendPropertyChanged("Foodbeveragecode");
                    this.OnFoodbeveragecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Groupcode in the schema.
        /// </summary>
        [Column(Name = @"GroupCode", Storage = "_Groupcode", DbType = "VARCHAR(255)")]
        public string Groupcode
        {
            get
            {
                return this._Groupcode;
            }
            set
            {
                if (this._Groupcode != value)
                {
                    if (this._Tblfoodbeveragegroup.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnGroupcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Groupcode = value;
                    this.SendPropertyChanged("Groupcode");
                    this.OnGroupcodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragedescription in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageDescription", Storage = "_Foodbeveragedescription", DbType = "VARCHAR(255)")]
        public string Foodbeveragedescription
        {
            get
            {
                return this._Foodbeveragedescription;
            }
            set
            {
                if (this._Foodbeveragedescription != value)
                {
                    this.OnFoodbeveragedescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragedescription = value;
                    this.SendPropertyChanged("Foodbeveragedescription");
                    this.OnFoodbeveragedescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragealternatedescription in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageAlternateDescription", Storage = "_Foodbeveragealternatedescription", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragealternatedescription
        {
            get
            {
                return this._Foodbeveragealternatedescription;
            }
            set
            {
                if (this._Foodbeveragealternatedescription != value)
                {
                    this.OnFoodbeveragealternatedescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragealternatedescription = value;
                    this.SendPropertyChanged("Foodbeveragealternatedescription");
                    this.OnFoodbeveragealternatedescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageallowitemdiscount in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageAllowItemDiscount", Storage = "_Foodbeverageallowitemdiscount", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeverageallowitemdiscount
        {
            get
            {
                return this._Foodbeverageallowitemdiscount;
            }
            set
            {
                if (this._Foodbeverageallowitemdiscount != value)
                {
                    this.OnFoodbeverageallowitemdiscountChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageallowitemdiscount = value;
                    this.SendPropertyChanged("Foodbeverageallowitemdiscount");
                    this.OnFoodbeverageallowitemdiscountChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageallowtotaldiscount in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageAllowTotalDiscount", Storage = "_Foodbeverageallowtotaldiscount", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeverageallowtotaldiscount
        {
            get
            {
                return this._Foodbeverageallowtotaldiscount;
            }
            set
            {
                if (this._Foodbeverageallowtotaldiscount != value)
                {
                    this.OnFoodbeverageallowtotaldiscountChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageallowtotaldiscount = value;
                    this.SendPropertyChanged("Foodbeverageallowtotaldiscount");
                    this.OnFoodbeverageallowtotaldiscountChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequirepriorityoncancellation in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequirePriorityOnCancellation", Storage = "_Foodbeveragerequirepriorityoncancellation", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragerequirepriorityoncancellation
        {
            get
            {
                return this._Foodbeveragerequirepriorityoncancellation;
            }
            set
            {
                if (this._Foodbeveragerequirepriorityoncancellation != value)
                {
                    this.OnFoodbeveragerequirepriorityoncancellationChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequirepriorityoncancellation = value;
                    this.SendPropertyChanged("Foodbeveragerequirepriorityoncancellation");
                    this.OnFoodbeveragerequirepriorityoncancellationChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragetimebillingduration in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageTimeBillingDuration", Storage = "_Foodbeveragetimebillingduration", DbType = "INT(10)")]
        public System.Nullable<int> Foodbeveragetimebillingduration
        {
            get
            {
                return this._Foodbeveragetimebillingduration;
            }
            set
            {
                if (this._Foodbeveragetimebillingduration != value)
                {
                    this.OnFoodbeveragetimebillingdurationChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragetimebillingduration = value;
                    this.SendPropertyChanged("Foodbeveragetimebillingduration");
                    this.OnFoodbeveragetimebillingdurationChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepreparationduration in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePreparationDuration", Storage = "_Foodbeveragepreparationduration", DbType = "INT(10)")]
        public System.Nullable<int> Foodbeveragepreparationduration
        {
            get
            {
                return this._Foodbeveragepreparationduration;
            }
            set
            {
                if (this._Foodbeveragepreparationduration != value)
                {
                    this.OnFoodbeveragepreparationdurationChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepreparationduration = value;
                    this.SendPropertyChanged("Foodbeveragepreparationduration");
                    this.OnFoodbeveragepreparationdurationChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageshowonpos in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageShowOnPOS", Storage = "_Foodbeverageshowonpos", CanBeNull = false, DbType = "VARCHAR(5) NOT NULL")]
        public string Foodbeverageshowonpos
        {
            get
            {
                return this._Foodbeverageshowonpos;
            }
            set
            {
                if (this._Foodbeverageshowonpos != value)
                {
                    this.OnFoodbeverageshowonposChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageshowonpos = value;
                    this.SendPropertyChanged("Foodbeverageshowonpos");
                    this.OnFoodbeverageshowonposChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageisweighingitem in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageIsWeighingItem", Storage = "_Foodbeverageisweighingitem", CanBeNull = false, DbType = "VARCHAR(5) NOT NULL")]
        public string Foodbeverageisweighingitem
        {
            get
            {
                return this._Foodbeverageisweighingitem;
            }
            set
            {
                if (this._Foodbeverageisweighingitem != value)
                {
                    this.OnFoodbeverageisweighingitemChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageisweighingitem = value;
                    this.SendPropertyChanged("Foodbeverageisweighingitem");
                    this.OnFoodbeverageisweighingitemChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePrice", Storage = "_Foodbeverageprice", DbType = "DOUBLE(15,3)")]
        public System.Nullable<double> Foodbeverageprice
        {
            get
            {
                return this._Foodbeverageprice;
            }
            set
            {
                if (this._Foodbeverageprice != value)
                {
                    this.OnFoodbeveragepriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageprice = value;
                    this.SendPropertyChanged("Foodbeverageprice");
                    this.OnFoodbeveragepriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragehappyhourprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageHappyHourPrice", Storage = "_Foodbeveragehappyhourprice", DbType = "DOUBLE(15,3)")]
        public System.Nullable<double> Foodbeveragehappyhourprice
        {
            get
            {
                return this._Foodbeveragehappyhourprice;
            }
            set
            {
                if (this._Foodbeveragehappyhourprice != value)
                {
                    this.OnFoodbeveragehappyhourpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragehappyhourprice = value;
                    this.SendPropertyChanged("Foodbeveragehappyhourprice");
                    this.OnFoodbeveragehappyhourpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragesecondhappyhourprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageSecondHappyHourPrice", Storage = "_Foodbeveragesecondhappyhourprice", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragesecondhappyhourprice
        {
            get
            {
                return this._Foodbeveragesecondhappyhourprice;
            }
            set
            {
                if (this._Foodbeveragesecondhappyhourprice != value)
                {
                    this.OnFoodbeveragesecondhappyhourpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragesecondhappyhourprice = value;
                    this.SendPropertyChanged("Foodbeveragesecondhappyhourprice");
                    this.OnFoodbeveragesecondhappyhourpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragethirdhappyhourprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageThirdHappyHourPrice", Storage = "_Foodbeveragethirdhappyhourprice", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragethirdhappyhourprice
        {
            get
            {
                return this._Foodbeveragethirdhappyhourprice;
            }
            set
            {
                if (this._Foodbeveragethirdhappyhourprice != value)
                {
                    this.OnFoodbeveragethirdhappyhourpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragethirdhappyhourprice = value;
                    this.SendPropertyChanged("Foodbeveragethirdhappyhourprice");
                    this.OnFoodbeveragethirdhappyhourpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragehappyhourpercentage in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageHappyHourPercentage", Storage = "_Foodbeveragehappyhourpercentage", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragehappyhourpercentage
        {
            get
            {
                return this._Foodbeveragehappyhourpercentage;
            }
            set
            {
                if (this._Foodbeveragehappyhourpercentage != value)
                {
                    this.OnFoodbeveragehappyhourpercentageChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragehappyhourpercentage = value;
                    this.SendPropertyChanged("Foodbeveragehappyhourpercentage");
                    this.OnFoodbeveragehappyhourpercentageChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragesecondhappyhourpercentage in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageSecondHappyHourPercentage", Storage = "_Foodbeveragesecondhappyhourpercentage", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragesecondhappyhourpercentage
        {
            get
            {
                return this._Foodbeveragesecondhappyhourpercentage;
            }
            set
            {
                if (this._Foodbeveragesecondhappyhourpercentage != value)
                {
                    this.OnFoodbeveragesecondhappyhourpercentageChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragesecondhappyhourpercentage = value;
                    this.SendPropertyChanged("Foodbeveragesecondhappyhourpercentage");
                    this.OnFoodbeveragesecondhappyhourpercentageChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragethirdhappyhourpercentage in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageThirdHappyHourPercentage", Storage = "_Foodbeveragethirdhappyhourpercentage", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragethirdhappyhourpercentage
        {
            get
            {
                return this._Foodbeveragethirdhappyhourpercentage;
            }
            set
            {
                if (this._Foodbeveragethirdhappyhourpercentage != value)
                {
                    this.OnFoodbeveragethirdhappyhourpercentageChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragethirdhappyhourpercentage = value;
                    this.SendPropertyChanged("Foodbeveragethirdhappyhourpercentage");
                    this.OnFoodbeveragethirdhappyhourpercentageChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragememberprice1 in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageMemberPrice1", Storage = "_Foodbeveragememberprice1", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragememberprice1
        {
            get
            {
                return this._Foodbeveragememberprice1;
            }
            set
            {
                if (this._Foodbeveragememberprice1 != value)
                {
                    this.OnFoodbeveragememberprice1Changing(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragememberprice1 = value;
                    this.SendPropertyChanged("Foodbeveragememberprice1");
                    this.OnFoodbeveragememberprice1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragememberprice2 in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageMemberPrice2", Storage = "_Foodbeveragememberprice2", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragememberprice2
        {
            get
            {
                return this._Foodbeveragememberprice2;
            }
            set
            {
                if (this._Foodbeveragememberprice2 != value)
                {
                    this.OnFoodbeveragememberprice2Changing(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragememberprice2 = value;
                    this.SendPropertyChanged("Foodbeveragememberprice2");
                    this.OnFoodbeveragememberprice2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragememberprice3 in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageMemberPrice3", Storage = "_Foodbeveragememberprice3", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragememberprice3
        {
            get
            {
                return this._Foodbeveragememberprice3;
            }
            set
            {
                if (this._Foodbeveragememberprice3 != value)
                {
                    this.OnFoodbeveragememberprice3Changing(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragememberprice3 = value;
                    this.SendPropertyChanged("Foodbeveragememberprice3");
                    this.OnFoodbeveragememberprice3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragememberprice4 in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageMemberPrice4", Storage = "_Foodbeveragememberprice4", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragememberprice4
        {
            get
            {
                return this._Foodbeveragememberprice4;
            }
            set
            {
                if (this._Foodbeveragememberprice4 != value)
                {
                    this.OnFoodbeveragememberprice4Changing(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragememberprice4 = value;
                    this.SendPropertyChanged("Foodbeveragememberprice4");
                    this.OnFoodbeveragememberprice4Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragememberpoint in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageMemberPoint", Storage = "_Foodbeveragememberpoint", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragememberpoint
        {
            get
            {
                return this._Foodbeveragememberpoint;
            }
            set
            {
                if (this._Foodbeveragememberpoint != value)
                {
                    this.OnFoodbeveragememberpointChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragememberpoint = value;
                    this.SendPropertyChanged("Foodbeveragememberpoint");
                    this.OnFoodbeveragememberpointChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepicture in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePicture", Storage = "_Foodbeveragepicture", DbType = "LONGBLOB", UpdateCheck = UpdateCheck.Never)]
        public byte[] Foodbeveragepicture
        {
            get
            {
                return this._Foodbeveragepicture;
            }
            set
            {
                if (this._Foodbeveragepicture != value)
                {
                    this.OnFoodbeveragepictureChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepicture = value;
                    this.SendPropertyChanged("Foodbeveragepicture");
                    this.OnFoodbeveragepictureChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragekitchenorderprintingdestination in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageKitchenOrderPrintingDestination", Storage = "_Foodbeveragekitchenorderprintingdestination", DbType = "VARCHAR(255)")]
        public string Foodbeveragekitchenorderprintingdestination
        {
            get
            {
                return this._Foodbeveragekitchenorderprintingdestination;
            }
            set
            {
                if (this._Foodbeveragekitchenorderprintingdestination != value)
                {
                    this.OnFoodbeveragekitchenorderprintingdestinationChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragekitchenorderprintingdestination = value;
                    this.SendPropertyChanged("Foodbeveragekitchenorderprintingdestination");
                    this.OnFoodbeveragekitchenorderprintingdestinationChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageprintonorderlist in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePrintOnOrderList", Storage = "_Foodbeverageprintonorderlist", DbType = "VARCHAR(10)")]
        public string Foodbeverageprintonorderlist
        {
            get
            {
                return this._Foodbeverageprintonorderlist;
            }
            set
            {
                if (this._Foodbeverageprintonorderlist != value)
                {
                    this.OnFoodbeverageprintonorderlistChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageprintonorderlist = value;
                    this.SendPropertyChanged("Foodbeverageprintonorderlist");
                    this.OnFoodbeverageprintonorderlistChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageprintonkitchenorderlist in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePrintOnKitchenOrderList", Storage = "_Foodbeverageprintonkitchenorderlist", DbType = "VARCHAR(10)")]
        public string Foodbeverageprintonkitchenorderlist
        {
            get
            {
                return this._Foodbeverageprintonkitchenorderlist;
            }
            set
            {
                if (this._Foodbeverageprintonkitchenorderlist != value)
                {
                    this.OnFoodbeverageprintonkitchenorderlistChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageprintonkitchenorderlist = value;
                    this.SendPropertyChanged("Foodbeverageprintonkitchenorderlist");
                    this.OnFoodbeverageprintonkitchenorderlistChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageprintonbarorderlist in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePrintOnBarOrderList", Storage = "_Foodbeverageprintonbarorderlist", DbType = "VARCHAR(10)")]
        public string Foodbeverageprintonbarorderlist
        {
            get
            {
                return this._Foodbeverageprintonbarorderlist;
            }
            set
            {
                if (this._Foodbeverageprintonbarorderlist != value)
                {
                    this.OnFoodbeverageprintonbarorderlistChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageprintonbarorderlist = value;
                    this.SendPropertyChanged("Foodbeverageprintonbarorderlist");
                    this.OnFoodbeverageprintonbarorderlistChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageinvisibleday in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageInvisibleDay", Storage = "_Foodbeverageinvisibleday", DbType = "VARCHAR(255)")]
        public string Foodbeverageinvisibleday
        {
            get
            {
                return this._Foodbeverageinvisibleday;
            }
            set
            {
                if (this._Foodbeverageinvisibleday != value)
                {
                    this.OnFoodbeverageinvisibledayChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageinvisibleday = value;
                    this.SendPropertyChanged("Foodbeverageinvisibleday");
                    this.OnFoodbeverageinvisibledayChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragevatscheme in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageVATScheme", Storage = "_Foodbeveragevatscheme", DbType = "VARCHAR(20)")]
        public string Foodbeveragevatscheme
        {
            get
            {
                return this._Foodbeveragevatscheme;
            }
            set
            {
                if (this._Foodbeveragevatscheme != value)
                {
                    this.OnFoodbeveragevatschemeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragevatscheme = value;
                    this.SendPropertyChanged("Foodbeveragevatscheme");
                    this.OnFoodbeveragevatschemeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragelocaltax in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageLocalTax", Storage = "_Foodbeveragelocaltax", DbType = "VARCHAR(20)")]
        public string Foodbeveragelocaltax
        {
            get
            {
                return this._Foodbeveragelocaltax;
            }
            set
            {
                if (this._Foodbeveragelocaltax != value)
                {
                    this.OnFoodbeveragelocaltaxChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragelocaltax = value;
                    this.SendPropertyChanged("Foodbeveragelocaltax");
                    this.OnFoodbeveragelocaltaxChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageavailable in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageAvailable", Storage = "_Foodbeverageavailable", DbType = "VARCHAR(255)")]
        public string Foodbeverageavailable
        {
            get
            {
                return this._Foodbeverageavailable;
            }
            set
            {
                if (this._Foodbeverageavailable != value)
                {
                    this.OnFoodbeverageavailableChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageavailable = value;
                    this.SendPropertyChanged("Foodbeverageavailable");
                    this.OnFoodbeverageavailableChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageisnettprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageIsNettPrice", Storage = "_Foodbeverageisnettprice", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeverageisnettprice
        {
            get
            {
                return this._Foodbeverageisnettprice;
            }
            set
            {
                if (this._Foodbeverageisnettprice != value)
                {
                    this.OnFoodbeverageisnettpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageisnettprice = value;
                    this.SendPropertyChanged("Foodbeverageisnettprice");
                    this.OnFoodbeverageisnettpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragewaivegovernmenttax in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageWaiveGovernmentTax", Storage = "_Foodbeveragewaivegovernmenttax", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragewaivegovernmenttax
        {
            get
            {
                return this._Foodbeveragewaivegovernmenttax;
            }
            set
            {
                if (this._Foodbeveragewaivegovernmenttax != value)
                {
                    this.OnFoodbeveragewaivegovernmenttaxChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragewaivegovernmenttax = value;
                    this.SendPropertyChanged("Foodbeveragewaivegovernmenttax");
                    this.OnFoodbeveragewaivegovernmenttaxChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragewaiveservicecharge in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageWaiveServiceCharge", Storage = "_Foodbeveragewaiveservicecharge", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragewaiveservicecharge
        {
            get
            {
                return this._Foodbeveragewaiveservicecharge;
            }
            set
            {
                if (this._Foodbeveragewaiveservicecharge != value)
                {
                    this.OnFoodbeveragewaiveservicechargeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragewaiveservicecharge = value;
                    this.SendPropertyChanged("Foodbeveragewaiveservicecharge");
                    this.OnFoodbeveragewaiveservicechargeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageiscashvoucher in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageIsCashVoucher", Storage = "_Foodbeverageiscashvoucher", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeverageiscashvoucher
        {
            get
            {
                return this._Foodbeverageiscashvoucher;
            }
            set
            {
                if (this._Foodbeverageiscashvoucher != value)
                {
                    this.OnFoodbeverageiscashvoucherChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageiscashvoucher = value;
                    this.SendPropertyChanged("Foodbeverageiscashvoucher");
                    this.OnFoodbeverageiscashvoucherChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageispaxcontrol in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageIsPaxControl", Storage = "_Foodbeverageispaxcontrol", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeverageispaxcontrol
        {
            get
            {
                return this._Foodbeverageispaxcontrol;
            }
            set
            {
                if (this._Foodbeverageispaxcontrol != value)
                {
                    this.OnFoodbeverageispaxcontrolChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageispaxcontrol = value;
                    this.SendPropertyChanged("Foodbeverageispaxcontrol");
                    this.OnFoodbeverageispaxcontrolChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageinvisibletimingfrom in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageInvisibleTimingFrom", Storage = "_Foodbeverageinvisibletimingfrom", DbType = "TIME")]
        public System.Nullable<System.TimeSpan> Foodbeverageinvisibletimingfrom
        {
            get
            {
                return this._Foodbeverageinvisibletimingfrom;
            }
            set
            {
                if (this._Foodbeverageinvisibletimingfrom != value)
                {
                    this.OnFoodbeverageinvisibletimingfromChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageinvisibletimingfrom = value;
                    this.SendPropertyChanged("Foodbeverageinvisibletimingfrom");
                    this.OnFoodbeverageinvisibletimingfromChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeverageinvisibletimingto in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageInvisibleTimingTo", Storage = "_Foodbeverageinvisibletimingto", DbType = "TIME")]
        public System.Nullable<System.TimeSpan> Foodbeverageinvisibletimingto
        {
            get
            {
                return this._Foodbeverageinvisibletimingto;
            }
            set
            {
                if (this._Foodbeverageinvisibletimingto != value)
                {
                    this.OnFoodbeverageinvisibletimingtoChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeverageinvisibletimingto = value;
                    this.SendPropertyChanged("Foodbeverageinvisibletimingto");
                    this.OnFoodbeverageinvisibletimingtoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragetableoccupationperiod in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageTableOccupationPeriod", Storage = "_Foodbeveragetableoccupationperiod", DbType = "INT(10)")]
        public System.Nullable<int> Foodbeveragetableoccupationperiod
        {
            get
            {
                return this._Foodbeveragetableoccupationperiod;
            }
            set
            {
                if (this._Foodbeveragetableoccupationperiod != value)
                {
                    this.OnFoodbeveragetableoccupationperiodChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragetableoccupationperiod = value;
                    this.SendPropertyChanged("Foodbeveragetableoccupationperiod");
                    this.OnFoodbeveragetableoccupationperiodChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeveragegroup_Tblfoodbeverage", Storage="_Tblfoodbeveragegroup", ThisKey="Groupcode", IsForeignKey=true)]
        public Tblfoodbeveragegroup Tblfoodbeveragegroup
        {
            get
            {
                return this._Tblfoodbeveragegroup.Entity;
            }
            set
            {
                Tblfoodbeveragegroup previousValue = this._Tblfoodbeveragegroup.Entity;
                if ((previousValue != value) || (this._Tblfoodbeveragegroup.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeveragegroup.Entity = null;
                        previousValue.Tblfoodbeverages.Remove(this);
                    }
                    this._Tblfoodbeveragegroup.Entity = value;
                    if (value != null)
                    {
                        this._Groupcode = value.Groupcode;
                        value.Tblfoodbeverages.Add(this);
                    }
                    else
                    {
                        this._Groupcode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeveragegroup");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragerequest", Storage="_Tblfoodbeveragerequests", OtherKey="Foodbeveragecode")]
        public EntitySet<Tblfoodbeveragerequest> Tblfoodbeveragerequests
        {
            get
            {
                return this._Tblfoodbeveragerequests;
            }
            set
            {
                this._Tblfoodbeveragerequests.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragerequestrule", Storage="_Tblfoodbeveragerequestrules", OtherKey="Foodbeveragecode")]
        public EntitySet<Tblfoodbeveragerequestrule> Tblfoodbeveragerequestrules
        {
            get
            {
                return this._Tblfoodbeveragerequestrules;
            }
            set
            {
                this._Tblfoodbeveragerequestrules.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepurchasewithpurchaserule", Storage="_Tblfoodbeveragepurchasewithpurchaserules", OtherKey="Foodbeveragecode")]
        public EntitySet<Tblfoodbeveragepurchasewithpurchaserule> Tblfoodbeveragepurchasewithpurchaserules
        {
            get
            {
                return this._Tblfoodbeveragepurchasewithpurchaserules;
            }
            set
            {
                this._Tblfoodbeveragepurchasewithpurchaserules.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepwpitem", Storage="_Tblfoodbeveragepwpitems", OtherKey="Foodbeveragecode")]
        public EntitySet<Tblfoodbeveragepwpitem> Tblfoodbeveragepwpitems
        {
            get
            {
                return this._Tblfoodbeveragepwpitems;
            }
            set
            {
                this._Tblfoodbeveragepwpitems.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepwpitem1", Storage="_Tblfoodbeveragepwpitems1", OtherKey="Foodbeveragepwpitemcode")]
        public EntitySet<Tblfoodbeveragepwpitem> Tblfoodbeveragepwpitems1
        {
            get
            {
                return this._Tblfoodbeveragepwpitems1;
            }
            set
            {
                this._Tblfoodbeveragepwpitems1.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Tblfoodbeveragerequests(Tblfoodbeveragerequest entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragerequests");
            entity.Tblfoodbeverage = this;
        }
    
        private void detach_Tblfoodbeveragerequests(Tblfoodbeveragerequest entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragerequests");
            entity.Tblfoodbeverage = null;
        }

        private void attach_Tblfoodbeveragerequestrules(Tblfoodbeveragerequestrule entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragerequestrules");
            entity.Tblfoodbeverage = this;
        }
    
        private void detach_Tblfoodbeveragerequestrules(Tblfoodbeveragerequestrule entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragerequestrules");
            entity.Tblfoodbeverage = null;
        }

        private void attach_Tblfoodbeveragepurchasewithpurchaserules(Tblfoodbeveragepurchasewithpurchaserule entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepurchasewithpurchaserules");
            entity.Tblfoodbeverage = this;
        }
    
        private void detach_Tblfoodbeveragepurchasewithpurchaserules(Tblfoodbeveragepurchasewithpurchaserule entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepurchasewithpurchaserules");
            entity.Tblfoodbeverage = null;
        }

        private void attach_Tblfoodbeveragepwpitems(Tblfoodbeveragepwpitem entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepwpitems");
            entity.Tblfoodbeverage = this;
        }
    
        private void detach_Tblfoodbeveragepwpitems(Tblfoodbeveragepwpitem entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepwpitems");
            entity.Tblfoodbeverage = null;
        }

        private void attach_Tblfoodbeveragepwpitems1(Tblfoodbeveragepwpitem entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepwpitems1");
            entity.Tblfoodbeverage1 = this;
        }
    
        private void detach_Tblfoodbeveragepwpitems1(Tblfoodbeveragepwpitem entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragepwpitems1");
            entity.Tblfoodbeverage1 = null;
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragegroup in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeveragegroup")]
    public partial class Tblfoodbeveragegroup : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Groupcode;

        private string _Groupdescription;

        private string _Groupalternatedescription;

        private string _Groupmenutype;

        private byte[] _Grouppicture;

        private string _Groupavailable;

        private EntitySet<Tblfoodbeverage> _Tblfoodbeverages;

        private EntityRef<Tblfoodbeveragemenutype> _Tblfoodbeveragemenutype;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnGroupcodeChanging(string value);
        partial void OnGroupcodeChanged();
        partial void OnGroupdescriptionChanging(string value);
        partial void OnGroupdescriptionChanged();
        partial void OnGroupalternatedescriptionChanging(string value);
        partial void OnGroupalternatedescriptionChanged();
        partial void OnGroupmenutypeChanging(string value);
        partial void OnGroupmenutypeChanged();
        partial void OnGrouppictureChanging(byte[] value);
        partial void OnGrouppictureChanged();
        partial void OnGroupavailableChanging(string value);
        partial void OnGroupavailableChanged();
        #endregion

        public Tblfoodbeveragegroup()
        {
            this._Tblfoodbeverages = new EntitySet<Tblfoodbeverage>(new Action<Tblfoodbeverage>(this.attach_Tblfoodbeverages), new Action<Tblfoodbeverage>(this.detach_Tblfoodbeverages));
            this._Tblfoodbeveragemenutype  = default(EntityRef<Tblfoodbeveragemenutype>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Groupcode in the schema.
        /// </summary>
        [Column(Name = @"GroupCode", Storage = "_Groupcode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Groupcode
        {
            get
            {
                return this._Groupcode;
            }
            set
            {
                if (this._Groupcode != value)
                {
                    this.OnGroupcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Groupcode = value;
                    this.SendPropertyChanged("Groupcode");
                    this.OnGroupcodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Groupdescription in the schema.
        /// </summary>
        [Column(Name = @"GroupDescription", Storage = "_Groupdescription", DbType = "VARCHAR(255)")]
        public string Groupdescription
        {
            get
            {
                return this._Groupdescription;
            }
            set
            {
                if (this._Groupdescription != value)
                {
                    this.OnGroupdescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Groupdescription = value;
                    this.SendPropertyChanged("Groupdescription");
                    this.OnGroupdescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Groupalternatedescription in the schema.
        /// </summary>
        [Column(Name = @"GroupAlternateDescription", Storage = "_Groupalternatedescription", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Groupalternatedescription
        {
            get
            {
                return this._Groupalternatedescription;
            }
            set
            {
                if (this._Groupalternatedescription != value)
                {
                    this.OnGroupalternatedescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Groupalternatedescription = value;
                    this.SendPropertyChanged("Groupalternatedescription");
                    this.OnGroupalternatedescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Groupmenutype in the schema.
        /// </summary>
        [Column(Name = @"GroupMenuType", Storage = "_Groupmenutype", DbType = "VARCHAR(255)")]
        public string Groupmenutype
        {
            get
            {
                return this._Groupmenutype;
            }
            set
            {
                if (this._Groupmenutype != value)
                {
                    if (this._Tblfoodbeveragemenutype.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnGroupmenutypeChanging(value);
                    this.SendPropertyChanging();
                    this._Groupmenutype = value;
                    this.SendPropertyChanged("Groupmenutype");
                    this.OnGroupmenutypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Grouppicture in the schema.
        /// </summary>
        [Column(Name = @"GroupPicture", Storage = "_Grouppicture", DbType = "LONGBLOB", UpdateCheck = UpdateCheck.Never)]
        public byte[] Grouppicture
        {
            get
            {
                return this._Grouppicture;
            }
            set
            {
                if (this._Grouppicture != value)
                {
                    this.OnGrouppictureChanging(value);
                    this.SendPropertyChanging();
                    this._Grouppicture = value;
                    this.SendPropertyChanged("Grouppicture");
                    this.OnGrouppictureChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Groupavailable in the schema.
        /// </summary>
        [Column(Name = @"GroupAvailable", Storage = "_Groupavailable", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Groupavailable
        {
            get
            {
                return this._Groupavailable;
            }
            set
            {
                if (this._Groupavailable != value)
                {
                    this.OnGroupavailableChanging(value);
                    this.SendPropertyChanging();
                    this._Groupavailable = value;
                    this.SendPropertyChanged("Groupavailable");
                    this.OnGroupavailableChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeveragegroup_Tblfoodbeverage", Storage="_Tblfoodbeverages", OtherKey="Groupcode")]
        public EntitySet<Tblfoodbeverage> Tblfoodbeverages
        {
            get
            {
                return this._Tblfoodbeverages;
            }
            set
            {
                this._Tblfoodbeverages.Assign(value);
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeveragemenutype_Tblfoodbeveragegroup", Storage="_Tblfoodbeveragemenutype", ThisKey="Groupmenutype", IsForeignKey=true)]
        public Tblfoodbeveragemenutype Tblfoodbeveragemenutype
        {
            get
            {
                return this._Tblfoodbeveragemenutype.Entity;
            }
            set
            {
                Tblfoodbeveragemenutype previousValue = this._Tblfoodbeveragemenutype.Entity;
                if ((previousValue != value) || (this._Tblfoodbeveragemenutype.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeveragemenutype.Entity = null;
                        previousValue.Tblfoodbeveragegroups.Remove(this);
                    }
                    this._Tblfoodbeveragemenutype.Entity = value;
                    if (value != null)
                    {
                        this._Groupmenutype = value.Groupmenutype;
                        value.Tblfoodbeveragegroups.Add(this);
                    }
                    else
                    {
                        this._Groupmenutype = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeveragemenutype");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Tblfoodbeverages(Tblfoodbeverage entity)
        {
            this.SendPropertyChanging("Tblfoodbeverages");
            entity.Tblfoodbeveragegroup = this;
        }
    
        private void detach_Tblfoodbeverages(Tblfoodbeverage entity)
        {
            this.SendPropertyChanging("Tblfoodbeverages");
            entity.Tblfoodbeveragegroup = null;
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragemenutype in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeveragemenutype")]
    public partial class Tblfoodbeveragemenutype : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Groupmenutype;

        private EntitySet<Tblfoodbeveragegroup> _Tblfoodbeveragegroups;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnGroupmenutypeChanging(string value);
        partial void OnGroupmenutypeChanged();
        #endregion

        public Tblfoodbeveragemenutype()
        {
            this._Tblfoodbeveragegroups = new EntitySet<Tblfoodbeveragegroup>(new Action<Tblfoodbeveragegroup>(this.attach_Tblfoodbeveragegroups), new Action<Tblfoodbeveragegroup>(this.detach_Tblfoodbeveragegroups));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Groupmenutype in the schema.
        /// </summary>
        [Column(Name = @"GroupMenuType", Storage = "_Groupmenutype", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Groupmenutype
        {
            get
            {
                return this._Groupmenutype;
            }
            set
            {
                if (this._Groupmenutype != value)
                {
                    this.OnGroupmenutypeChanging(value);
                    this.SendPropertyChanging();
                    this._Groupmenutype = value;
                    this.SendPropertyChanged("Groupmenutype");
                    this.OnGroupmenutypeChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeveragemenutype_Tblfoodbeveragegroup", Storage="_Tblfoodbeveragegroups", OtherKey="Groupmenutype")]
        public EntitySet<Tblfoodbeveragegroup> Tblfoodbeveragegroups
        {
            get
            {
                return this._Tblfoodbeveragegroups;
            }
            set
            {
                this._Tblfoodbeveragegroups.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Tblfoodbeveragegroups(Tblfoodbeveragegroup entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragegroups");
            entity.Tblfoodbeveragemenutype = this;
        }
    
        private void detach_Tblfoodbeveragegroups(Tblfoodbeveragegroup entity)
        {
            this.SendPropertyChanging("Tblfoodbeveragegroups");
            entity.Tblfoodbeveragemenutype = null;
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragerequest in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeveragerequest")]
    public partial class Tblfoodbeveragerequest : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Foodbeveragerequestpk;

        private string _Foodbeveragecode;

        private string _Foodbeveragerequest;

        private int _Foodbeveragerequestbatch;

        private System.Nullable<double> _Foodbeveragerequestprice;

        private byte[] _Foodbeveragerequestpicture;

        private string _Isopenprice;

        private string _Foodbeveragerequestshortcutkey;

        private EntityRef<Tblfoodbeverage> _Tblfoodbeverage;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFoodbeveragerequestpkChanging(int value);
        partial void OnFoodbeveragerequestpkChanged();
        partial void OnFoodbeveragecodeChanging(string value);
        partial void OnFoodbeveragecodeChanged();
        partial void OnFoodbeveragerequestChanging(string value);
        partial void OnFoodbeveragerequestChanged();
        partial void OnFoodbeveragerequestbatchChanging(int value);
        partial void OnFoodbeveragerequestbatchChanged();
        partial void OnFoodbeveragerequestpriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragerequestpriceChanged();
        partial void OnFoodbeveragerequestpictureChanging(byte[] value);
        partial void OnFoodbeveragerequestpictureChanged();
        partial void OnIsopenpriceChanging(string value);
        partial void OnIsopenpriceChanged();
        partial void OnFoodbeveragerequestshortcutkeyChanging(string value);
        partial void OnFoodbeveragerequestshortcutkeyChanged();
        #endregion

        public Tblfoodbeveragerequest()
        {
            this._Tblfoodbeverage  = default(EntityRef<Tblfoodbeverage>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestpk in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestPK", Storage = "_Foodbeveragerequestpk", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Foodbeveragerequestpk
        {
            get
            {
                return this._Foodbeveragerequestpk;
            }
            set
            {
                if (this._Foodbeveragerequestpk != value)
                {
                    this.OnFoodbeveragerequestpkChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestpk = value;
                    this.SendPropertyChanged("Foodbeveragerequestpk");
                    this.OnFoodbeveragerequestpkChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragecode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageCode", Storage = "_Foodbeveragecode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragecode
        {
            get
            {
                return this._Foodbeveragecode;
            }
            set
            {
                if (this._Foodbeveragecode != value)
                {
                    if (this._Tblfoodbeverage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFoodbeveragecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragecode = value;
                    this.SendPropertyChanged("Foodbeveragecode");
                    this.OnFoodbeveragecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequest in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequest", Storage = "_Foodbeveragerequest", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragerequest
        {
            get
            {
                return this._Foodbeveragerequest;
            }
            set
            {
                if (this._Foodbeveragerequest != value)
                {
                    this.OnFoodbeveragerequestChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequest = value;
                    this.SendPropertyChanged("Foodbeveragerequest");
                    this.OnFoodbeveragerequestChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestbatch in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestBatch", Storage = "_Foodbeveragerequestbatch", CanBeNull = false, DbType = "INT(10) NOT NULL")]
        public int Foodbeveragerequestbatch
        {
            get
            {
                return this._Foodbeveragerequestbatch;
            }
            set
            {
                if (this._Foodbeveragerequestbatch != value)
                {
                    this.OnFoodbeveragerequestbatchChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestbatch = value;
                    this.SendPropertyChanged("Foodbeveragerequestbatch");
                    this.OnFoodbeveragerequestbatchChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestPrice", Storage = "_Foodbeveragerequestprice", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragerequestprice
        {
            get
            {
                return this._Foodbeveragerequestprice;
            }
            set
            {
                if (this._Foodbeveragerequestprice != value)
                {
                    this.OnFoodbeveragerequestpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestprice = value;
                    this.SendPropertyChanged("Foodbeveragerequestprice");
                    this.OnFoodbeveragerequestpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestpicture in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestPicture", Storage = "_Foodbeveragerequestpicture", DbType = "LONGBLOB", UpdateCheck = UpdateCheck.Never)]
        public byte[] Foodbeveragerequestpicture
        {
            get
            {
                return this._Foodbeveragerequestpicture;
            }
            set
            {
                if (this._Foodbeveragerequestpicture != value)
                {
                    this.OnFoodbeveragerequestpictureChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestpicture = value;
                    this.SendPropertyChanged("Foodbeveragerequestpicture");
                    this.OnFoodbeveragerequestpictureChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Isopenprice in the schema.
        /// </summary>
        [Column(Name = @"IsOpenPrice", Storage = "_Isopenprice", DbType = "VARCHAR(10)")]
        public string Isopenprice
        {
            get
            {
                return this._Isopenprice;
            }
            set
            {
                if (this._Isopenprice != value)
                {
                    this.OnIsopenpriceChanging(value);
                    this.SendPropertyChanging();
                    this._Isopenprice = value;
                    this.SendPropertyChanged("Isopenprice");
                    this.OnIsopenpriceChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestshortcutkey in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestShortcutKey", Storage = "_Foodbeveragerequestshortcutkey", DbType = "VARCHAR(30)")]
        public string Foodbeveragerequestshortcutkey
        {
            get
            {
                return this._Foodbeveragerequestshortcutkey;
            }
            set
            {
                if (this._Foodbeveragerequestshortcutkey != value)
                {
                    this.OnFoodbeveragerequestshortcutkeyChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestshortcutkey = value;
                    this.SendPropertyChanged("Foodbeveragerequestshortcutkey");
                    this.OnFoodbeveragerequestshortcutkeyChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragerequest", Storage="_Tblfoodbeverage", ThisKey="Foodbeveragecode", IsForeignKey=true)]
        public Tblfoodbeverage Tblfoodbeverage
        {
            get
            {
                return this._Tblfoodbeverage.Entity;
            }
            set
            {
                Tblfoodbeverage previousValue = this._Tblfoodbeverage.Entity;
                if ((previousValue != value) || (this._Tblfoodbeverage.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeverage.Entity = null;
                        previousValue.Tblfoodbeveragerequests.Remove(this);
                    }
                    this._Tblfoodbeverage.Entity = value;
                    if (value != null)
                    {
                        this._Foodbeveragecode = value.Foodbeveragecode;
                        value.Tblfoodbeveragerequests.Add(this);
                    }
                    else
                    {
                        this._Foodbeveragecode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeverage");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragerequestrule in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeveragerequestrules")]
    public partial class Tblfoodbeveragerequestrule : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Foodbeveragerequestrulespk;

        private string _Foodbeveragecode;

        private int _Foodbeveragerequestbatch;

        private string _Foodbeveragerequestrulescondition;

        private System.Nullable<int> _Foodbeveragerequestrulesnumber;

        private EntityRef<Tblfoodbeverage> _Tblfoodbeverage;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFoodbeveragerequestrulespkChanging(int value);
        partial void OnFoodbeveragerequestrulespkChanged();
        partial void OnFoodbeveragecodeChanging(string value);
        partial void OnFoodbeveragecodeChanged();
        partial void OnFoodbeveragerequestbatchChanging(int value);
        partial void OnFoodbeveragerequestbatchChanged();
        partial void OnFoodbeveragerequestrulesconditionChanging(string value);
        partial void OnFoodbeveragerequestrulesconditionChanged();
        partial void OnFoodbeveragerequestrulesnumberChanging(System.Nullable<int> value);
        partial void OnFoodbeveragerequestrulesnumberChanged();
        #endregion

        public Tblfoodbeveragerequestrule()
        {
            this._Tblfoodbeverage  = default(EntityRef<Tblfoodbeverage>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestrulespk in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestRulesPK", Storage = "_Foodbeveragerequestrulespk", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Foodbeveragerequestrulespk
        {
            get
            {
                return this._Foodbeveragerequestrulespk;
            }
            set
            {
                if (this._Foodbeveragerequestrulespk != value)
                {
                    this.OnFoodbeveragerequestrulespkChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestrulespk = value;
                    this.SendPropertyChanged("Foodbeveragerequestrulespk");
                    this.OnFoodbeveragerequestrulespkChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragecode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageCode", Storage = "_Foodbeveragecode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragecode
        {
            get
            {
                return this._Foodbeveragecode;
            }
            set
            {
                if (this._Foodbeveragecode != value)
                {
                    if (this._Tblfoodbeverage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFoodbeveragecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragecode = value;
                    this.SendPropertyChanged("Foodbeveragecode");
                    this.OnFoodbeveragecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestbatch in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestBatch", Storage = "_Foodbeveragerequestbatch", CanBeNull = false, DbType = "INT(10) NOT NULL")]
        public int Foodbeveragerequestbatch
        {
            get
            {
                return this._Foodbeveragerequestbatch;
            }
            set
            {
                if (this._Foodbeveragerequestbatch != value)
                {
                    this.OnFoodbeveragerequestbatchChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestbatch = value;
                    this.SendPropertyChanged("Foodbeveragerequestbatch");
                    this.OnFoodbeveragerequestbatchChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestrulescondition in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestRulesCondition", Storage = "_Foodbeveragerequestrulescondition", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragerequestrulescondition
        {
            get
            {
                return this._Foodbeveragerequestrulescondition;
            }
            set
            {
                if (this._Foodbeveragerequestrulescondition != value)
                {
                    this.OnFoodbeveragerequestrulesconditionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestrulescondition = value;
                    this.SendPropertyChanged("Foodbeveragerequestrulescondition");
                    this.OnFoodbeveragerequestrulesconditionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragerequestrulesnumber in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageRequestRulesNumber", Storage = "_Foodbeveragerequestrulesnumber", DbType = "INT(10)")]
        public System.Nullable<int> Foodbeveragerequestrulesnumber
        {
            get
            {
                return this._Foodbeveragerequestrulesnumber;
            }
            set
            {
                if (this._Foodbeveragerequestrulesnumber != value)
                {
                    this.OnFoodbeveragerequestrulesnumberChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragerequestrulesnumber = value;
                    this.SendPropertyChanged("Foodbeveragerequestrulesnumber");
                    this.OnFoodbeveragerequestrulesnumberChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragerequestrule", Storage="_Tblfoodbeverage", ThisKey="Foodbeveragecode", IsForeignKey=true)]
        public Tblfoodbeverage Tblfoodbeverage
        {
            get
            {
                return this._Tblfoodbeverage.Entity;
            }
            set
            {
                Tblfoodbeverage previousValue = this._Tblfoodbeverage.Entity;
                if ((previousValue != value) || (this._Tblfoodbeverage.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeverage.Entity = null;
                        previousValue.Tblfoodbeveragerequestrules.Remove(this);
                    }
                    this._Tblfoodbeverage.Entity = value;
                    if (value != null)
                    {
                        this._Foodbeveragecode = value.Foodbeveragecode;
                        value.Tblfoodbeveragerequestrules.Add(this);
                    }
                    else
                    {
                        this._Foodbeveragecode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeverage");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tbltable in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tbltable")]
    public partial class Tbltable : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private string _Tablename;

        private string _Tabledescription;

        private string _Planname;

        private System.Nullable<int> _Xaxis;

        private System.Nullable<int> _Yaxis;

        private string _Movetotablename;

        private string _Tablesize;

        private string _Tablepattern;

        private string _Tablestilloccupied;

        private string _Tabledeleteafterpayment;

        private string _Nftimebillingratetype;

        private string _Nfopensignal;

        private string _Nfclosesignal;

        private System.Nullable<System.DateTime> _Nfopeningtime;

        private System.Nullable<double> _Nfdefaulthour;

        private string _Ktvtimebillingratetype;

        private string _Ktvblockbillingratetype;

        private string _Ktvsongbillingratetype;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnTablenameChanging(string value);
        partial void OnTablenameChanged();
        partial void OnTabledescriptionChanging(string value);
        partial void OnTabledescriptionChanged();
        partial void OnPlannameChanging(string value);
        partial void OnPlannameChanged();
        partial void OnXaxisChanging(System.Nullable<int> value);
        partial void OnXaxisChanged();
        partial void OnYaxisChanging(System.Nullable<int> value);
        partial void OnYaxisChanged();
        partial void OnMovetotablenameChanging(string value);
        partial void OnMovetotablenameChanged();
        partial void OnTablesizeChanging(string value);
        partial void OnTablesizeChanged();
        partial void OnTablepatternChanging(string value);
        partial void OnTablepatternChanged();
        partial void OnTablestilloccupiedChanging(string value);
        partial void OnTablestilloccupiedChanged();
        partial void OnTabledeleteafterpaymentChanging(string value);
        partial void OnTabledeleteafterpaymentChanged();
        partial void OnNftimebillingratetypeChanging(string value);
        partial void OnNftimebillingratetypeChanged();
        partial void OnNfopensignalChanging(string value);
        partial void OnNfopensignalChanged();
        partial void OnNfclosesignalChanging(string value);
        partial void OnNfclosesignalChanged();
        partial void OnNfopeningtimeChanging(System.Nullable<System.DateTime> value);
        partial void OnNfopeningtimeChanged();
        partial void OnNfdefaulthourChanging(System.Nullable<double> value);
        partial void OnNfdefaulthourChanged();
        partial void OnKtvtimebillingratetypeChanging(string value);
        partial void OnKtvtimebillingratetypeChanged();
        partial void OnKtvblockbillingratetypeChanging(string value);
        partial void OnKtvblockbillingratetypeChanged();
        partial void OnKtvsongbillingratetypeChanging(string value);
        partial void OnKtvsongbillingratetypeChanged();
        #endregion

        public Tbltable()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Tablename in the schema.
        /// </summary>
        [Column(Name = @"TableName", Storage = "_Tablename", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL", IsPrimaryKey = true)]
        public string Tablename
        {
            get
            {
                return this._Tablename;
            }
            set
            {
                if (this._Tablename != value)
                {
                    this.OnTablenameChanging(value);
                    this.SendPropertyChanging();
                    this._Tablename = value;
                    this.SendPropertyChanged("Tablename");
                    this.OnTablenameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tabledescription in the schema.
        /// </summary>
        [Column(Name = @"TableDescription", Storage = "_Tabledescription", DbType = "VARCHAR(255)")]
        public string Tabledescription
        {
            get
            {
                return this._Tabledescription;
            }
            set
            {
                if (this._Tabledescription != value)
                {
                    this.OnTabledescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Tabledescription = value;
                    this.SendPropertyChanged("Tabledescription");
                    this.OnTabledescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Planname in the schema.
        /// </summary>
        [Column(Name = @"PlanName", Storage = "_Planname", DbType = "VARCHAR(255)")]
        public string Planname
        {
            get
            {
                return this._Planname;
            }
            set
            {
                if (this._Planname != value)
                {
                    this.OnPlannameChanging(value);
                    this.SendPropertyChanging();
                    this._Planname = value;
                    this.SendPropertyChanged("Planname");
                    this.OnPlannameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Xaxis in the schema.
        /// </summary>
        [Column(Name = @"XAxis", Storage = "_Xaxis", DbType = "INT(10)")]
        public System.Nullable<int> Xaxis
        {
            get
            {
                return this._Xaxis;
            }
            set
            {
                if (this._Xaxis != value)
                {
                    this.OnXaxisChanging(value);
                    this.SendPropertyChanging();
                    this._Xaxis = value;
                    this.SendPropertyChanged("Xaxis");
                    this.OnXaxisChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Yaxis in the schema.
        /// </summary>
        [Column(Name = @"YAxis", Storage = "_Yaxis", DbType = "INT(10)")]
        public System.Nullable<int> Yaxis
        {
            get
            {
                return this._Yaxis;
            }
            set
            {
                if (this._Yaxis != value)
                {
                    this.OnYaxisChanging(value);
                    this.SendPropertyChanging();
                    this._Yaxis = value;
                    this.SendPropertyChanged("Yaxis");
                    this.OnYaxisChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Movetotablename in the schema.
        /// </summary>
        [Column(Name = @"MoveToTableName", Storage = "_Movetotablename", DbType = "VARCHAR(255)")]
        public string Movetotablename
        {
            get
            {
                return this._Movetotablename;
            }
            set
            {
                if (this._Movetotablename != value)
                {
                    this.OnMovetotablenameChanging(value);
                    this.SendPropertyChanging();
                    this._Movetotablename = value;
                    this.SendPropertyChanged("Movetotablename");
                    this.OnMovetotablenameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tablesize in the schema.
        /// </summary>
        [Column(Name = @"TableSize", Storage = "_Tablesize", DbType = "VARCHAR(255)")]
        public string Tablesize
        {
            get
            {
                return this._Tablesize;
            }
            set
            {
                if (this._Tablesize != value)
                {
                    this.OnTablesizeChanging(value);
                    this.SendPropertyChanging();
                    this._Tablesize = value;
                    this.SendPropertyChanged("Tablesize");
                    this.OnTablesizeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tablepattern in the schema.
        /// </summary>
        [Column(Name = @"TablePattern", Storage = "_Tablepattern", DbType = "VARCHAR(10)")]
        public string Tablepattern
        {
            get
            {
                return this._Tablepattern;
            }
            set
            {
                if (this._Tablepattern != value)
                {
                    this.OnTablepatternChanging(value);
                    this.SendPropertyChanging();
                    this._Tablepattern = value;
                    this.SendPropertyChanged("Tablepattern");
                    this.OnTablepatternChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tablestilloccupied in the schema.
        /// </summary>
        [Column(Name = @"TableStillOccupied", Storage = "_Tablestilloccupied", DbType = "VARCHAR(255)")]
        public string Tablestilloccupied
        {
            get
            {
                return this._Tablestilloccupied;
            }
            set
            {
                if (this._Tablestilloccupied != value)
                {
                    this.OnTablestilloccupiedChanging(value);
                    this.SendPropertyChanging();
                    this._Tablestilloccupied = value;
                    this.SendPropertyChanged("Tablestilloccupied");
                    this.OnTablestilloccupiedChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tabledeleteafterpayment in the schema.
        /// </summary>
        [Column(Name = @"TableDeleteAfterPayment", Storage = "_Tabledeleteafterpayment", DbType = "VARCHAR(255)")]
        public string Tabledeleteafterpayment
        {
            get
            {
                return this._Tabledeleteafterpayment;
            }
            set
            {
                if (this._Tabledeleteafterpayment != value)
                {
                    this.OnTabledeleteafterpaymentChanging(value);
                    this.SendPropertyChanging();
                    this._Tabledeleteafterpayment = value;
                    this.SendPropertyChanged("Tabledeleteafterpayment");
                    this.OnTabledeleteafterpaymentChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nftimebillingratetype in the schema.
        /// </summary>
        [Column(Name = @"NFTimeBillingRateType", Storage = "_Nftimebillingratetype", DbType = "VARCHAR(255)")]
        public string Nftimebillingratetype
        {
            get
            {
                return this._Nftimebillingratetype;
            }
            set
            {
                if (this._Nftimebillingratetype != value)
                {
                    this.OnNftimebillingratetypeChanging(value);
                    this.SendPropertyChanging();
                    this._Nftimebillingratetype = value;
                    this.SendPropertyChanged("Nftimebillingratetype");
                    this.OnNftimebillingratetypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nfopensignal in the schema.
        /// </summary>
        [Column(Name = @"NFOpenSignal", Storage = "_Nfopensignal", DbType = "VARCHAR(255)")]
        public string Nfopensignal
        {
            get
            {
                return this._Nfopensignal;
            }
            set
            {
                if (this._Nfopensignal != value)
                {
                    this.OnNfopensignalChanging(value);
                    this.SendPropertyChanging();
                    this._Nfopensignal = value;
                    this.SendPropertyChanged("Nfopensignal");
                    this.OnNfopensignalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nfclosesignal in the schema.
        /// </summary>
        [Column(Name = @"NFCloseSignal", Storage = "_Nfclosesignal", DbType = "VARCHAR(255)")]
        public string Nfclosesignal
        {
            get
            {
                return this._Nfclosesignal;
            }
            set
            {
                if (this._Nfclosesignal != value)
                {
                    this.OnNfclosesignalChanging(value);
                    this.SendPropertyChanging();
                    this._Nfclosesignal = value;
                    this.SendPropertyChanged("Nfclosesignal");
                    this.OnNfclosesignalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nfopeningtime in the schema.
        /// </summary>
        [Column(Name = @"NFOpeningTime", Storage = "_Nfopeningtime", DbType = "DATETIME")]
        public System.Nullable<System.DateTime> Nfopeningtime
        {
            get
            {
                return this._Nfopeningtime;
            }
            set
            {
                if (this._Nfopeningtime != value)
                {
                    this.OnNfopeningtimeChanging(value);
                    this.SendPropertyChanging();
                    this._Nfopeningtime = value;
                    this.SendPropertyChanged("Nfopeningtime");
                    this.OnNfopeningtimeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nfdefaulthour in the schema.
        /// </summary>
        [Column(Name = @"NFDefaultHour", Storage = "_Nfdefaulthour", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Nfdefaulthour
        {
            get
            {
                return this._Nfdefaulthour;
            }
            set
            {
                if (this._Nfdefaulthour != value)
                {
                    this.OnNfdefaulthourChanging(value);
                    this.SendPropertyChanging();
                    this._Nfdefaulthour = value;
                    this.SendPropertyChanged("Nfdefaulthour");
                    this.OnNfdefaulthourChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ktvtimebillingratetype in the schema.
        /// </summary>
        [Column(Name = @"KTVTimeBillingRateType", Storage = "_Ktvtimebillingratetype", DbType = "VARCHAR(255)")]
        public string Ktvtimebillingratetype
        {
            get
            {
                return this._Ktvtimebillingratetype;
            }
            set
            {
                if (this._Ktvtimebillingratetype != value)
                {
                    this.OnKtvtimebillingratetypeChanging(value);
                    this.SendPropertyChanging();
                    this._Ktvtimebillingratetype = value;
                    this.SendPropertyChanged("Ktvtimebillingratetype");
                    this.OnKtvtimebillingratetypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ktvblockbillingratetype in the schema.
        /// </summary>
        [Column(Name = @"KTVBlockBillingRateType", Storage = "_Ktvblockbillingratetype", DbType = "VARCHAR(255)")]
        public string Ktvblockbillingratetype
        {
            get
            {
                return this._Ktvblockbillingratetype;
            }
            set
            {
                if (this._Ktvblockbillingratetype != value)
                {
                    this.OnKtvblockbillingratetypeChanging(value);
                    this.SendPropertyChanging();
                    this._Ktvblockbillingratetype = value;
                    this.SendPropertyChanged("Ktvblockbillingratetype");
                    this.OnKtvblockbillingratetypeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ktvsongbillingratetype in the schema.
        /// </summary>
        [Column(Name = @"KTVSongBillingRateType", Storage = "_Ktvsongbillingratetype", DbType = "VARCHAR(255)")]
        public string Ktvsongbillingratetype
        {
            get
            {
                return this._Ktvsongbillingratetype;
            }
            set
            {
                if (this._Ktvsongbillingratetype != value)
                {
                    this.OnKtvsongbillingratetypeChanging(value);
                    this.SendPropertyChanging();
                    this._Ktvsongbillingratetype = value;
                    this.SendPropertyChanged("Ktvsongbillingratetype");
                    this.OnKtvsongbillingratetypeChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragepurchasewithpurchaserule in the schema.
    /// </summary>
    [Table(Name = @"restaurantpos.tblfoodbeveragepurchasewithpurchaserules")]
    public partial class Tblfoodbeveragepurchasewithpurchaserule : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Foodbeveragepurchasewithpurchaserulespk;

        private string _Foodbeveragecode;

        private int _Foodbeveragepurchasewithpurchasebatch;

        private string _Foodbeveragepurchasewithpurchaserulescondition;

        private System.Nullable<int> _Foodbeveragepurchasewithpurchaserulesnumber;

        private EntityRef<Tblfoodbeverage> _Tblfoodbeverage;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFoodbeveragepurchasewithpurchaserulespkChanging(int value);
        partial void OnFoodbeveragepurchasewithpurchaserulespkChanged();
        partial void OnFoodbeveragecodeChanging(string value);
        partial void OnFoodbeveragecodeChanged();
        partial void OnFoodbeveragepurchasewithpurchasebatchChanging(int value);
        partial void OnFoodbeveragepurchasewithpurchasebatchChanged();
        partial void OnFoodbeveragepurchasewithpurchaserulesconditionChanging(string value);
        partial void OnFoodbeveragepurchasewithpurchaserulesconditionChanged();
        partial void OnFoodbeveragepurchasewithpurchaserulesnumberChanging(System.Nullable<int> value);
        partial void OnFoodbeveragepurchasewithpurchaserulesnumberChanged();
        #endregion

        public Tblfoodbeveragepurchasewithpurchaserule()
        {
            this._Tblfoodbeverage  = default(EntityRef<Tblfoodbeverage>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepurchasewithpurchaserulespk in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePurchaseWithPurchaseRulesPK", Storage = "_Foodbeveragepurchasewithpurchaserulespk", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Foodbeveragepurchasewithpurchaserulespk
        {
            get
            {
                return this._Foodbeveragepurchasewithpurchaserulespk;
            }
            set
            {
                if (this._Foodbeveragepurchasewithpurchaserulespk != value)
                {
                    this.OnFoodbeveragepurchasewithpurchaserulespkChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepurchasewithpurchaserulespk = value;
                    this.SendPropertyChanged("Foodbeveragepurchasewithpurchaserulespk");
                    this.OnFoodbeveragepurchasewithpurchaserulespkChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragecode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageCode", Storage = "_Foodbeveragecode", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragecode
        {
            get
            {
                return this._Foodbeveragecode;
            }
            set
            {
                if (this._Foodbeveragecode != value)
                {
                    if (this._Tblfoodbeverage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFoodbeveragecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragecode = value;
                    this.SendPropertyChanged("Foodbeveragecode");
                    this.OnFoodbeveragecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepurchasewithpurchasebatch in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePurchaseWithPurchaseBatch", Storage = "_Foodbeveragepurchasewithpurchasebatch", CanBeNull = false, DbType = "INT(10) NOT NULL")]
        public int Foodbeveragepurchasewithpurchasebatch
        {
            get
            {
                return this._Foodbeveragepurchasewithpurchasebatch;
            }
            set
            {
                if (this._Foodbeveragepurchasewithpurchasebatch != value)
                {
                    this.OnFoodbeveragepurchasewithpurchasebatchChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepurchasewithpurchasebatch = value;
                    this.SendPropertyChanged("Foodbeveragepurchasewithpurchasebatch");
                    this.OnFoodbeveragepurchasewithpurchasebatchChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepurchasewithpurchaserulescondition in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePurchaseWithPurchaseRulesCondition", Storage = "_Foodbeveragepurchasewithpurchaserulescondition", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepurchasewithpurchaserulescondition
        {
            get
            {
                return this._Foodbeveragepurchasewithpurchaserulescondition;
            }
            set
            {
                if (this._Foodbeveragepurchasewithpurchaserulescondition != value)
                {
                    this.OnFoodbeveragepurchasewithpurchaserulesconditionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepurchasewithpurchaserulescondition = value;
                    this.SendPropertyChanged("Foodbeveragepurchasewithpurchaserulescondition");
                    this.OnFoodbeveragepurchasewithpurchaserulesconditionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepurchasewithpurchaserulesnumber in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePurchaseWithPurchaseRulesNumber", Storage = "_Foodbeveragepurchasewithpurchaserulesnumber", DbType = "INT(10)")]
        public System.Nullable<int> Foodbeveragepurchasewithpurchaserulesnumber
        {
            get
            {
                return this._Foodbeveragepurchasewithpurchaserulesnumber;
            }
            set
            {
                if (this._Foodbeveragepurchasewithpurchaserulesnumber != value)
                {
                    this.OnFoodbeveragepurchasewithpurchaserulesnumberChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepurchasewithpurchaserulesnumber = value;
                    this.SendPropertyChanged("Foodbeveragepurchasewithpurchaserulesnumber");
                    this.OnFoodbeveragepurchasewithpurchaserulesnumberChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepurchasewithpurchaserule", Storage="_Tblfoodbeverage", ThisKey="Foodbeveragecode", IsForeignKey=true)]
        public Tblfoodbeverage Tblfoodbeverage
        {
            get
            {
                return this._Tblfoodbeverage.Entity;
            }
            set
            {
                Tblfoodbeverage previousValue = this._Tblfoodbeverage.Entity;
                if ((previousValue != value) || (this._Tblfoodbeverage.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeverage.Entity = null;
                        previousValue.Tblfoodbeveragepurchasewithpurchaserules.Remove(this);
                    }
                    this._Tblfoodbeverage.Entity = value;
                    if (value != null)
                    {
                        this._Foodbeveragecode = value.Foodbeveragecode;
                        value.Tblfoodbeveragepurchasewithpurchaserules.Add(this);
                    }
                    else
                    {
                        this._Foodbeveragecode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeverage");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }


    /// <summary>
    /// There are no comments for Tblfoodbeveragepwpitem in the schema.
    /// </summary>
    /// <LongDescription>
    /// InnoDB free: 58368 kB
    /// </LongDescription>
    [Table(Name = @"restaurantpos.tblfoodbeveragepwpitems")]
    public partial class Tblfoodbeveragepwpitem : INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Foodbeveragepwpitempk;

        private string _Foodbeveragecode;

        private string _Foodbeveragepwpitemcode;

        private string _Foodbeveragepwpitemdescription;

        private string _Foodbeveragepwpitemalternatedescription;

        private int _Foodbeveragepurchasewithpurchasebatch;

        private string _Foodbeveragepwpitempriceonparentitem;

        private string _Foodbeveragepwpitemhideonreceipt;

        private string _Foodbeveragepwpitemasrequestonparentitem;

        private System.Nullable<double> _Foodbeveragepwpitemprice;

        private EntityRef<Tblfoodbeverage> _Tblfoodbeverage;

        private EntityRef<Tblfoodbeverage> _Tblfoodbeverage1;
    
        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnFoodbeveragepwpitempkChanging(int value);
        partial void OnFoodbeveragepwpitempkChanged();
        partial void OnFoodbeveragecodeChanging(string value);
        partial void OnFoodbeveragecodeChanged();
        partial void OnFoodbeveragepwpitemcodeChanging(string value);
        partial void OnFoodbeveragepwpitemcodeChanged();
        partial void OnFoodbeveragepwpitemdescriptionChanging(string value);
        partial void OnFoodbeveragepwpitemdescriptionChanged();
        partial void OnFoodbeveragepwpitemalternatedescriptionChanging(string value);
        partial void OnFoodbeveragepwpitemalternatedescriptionChanged();
        partial void OnFoodbeveragepurchasewithpurchasebatchChanging(int value);
        partial void OnFoodbeveragepurchasewithpurchasebatchChanged();
        partial void OnFoodbeveragepwpitempriceonparentitemChanging(string value);
        partial void OnFoodbeveragepwpitempriceonparentitemChanged();
        partial void OnFoodbeveragepwpitemhideonreceiptChanging(string value);
        partial void OnFoodbeveragepwpitemhideonreceiptChanged();
        partial void OnFoodbeveragepwpitemasrequestonparentitemChanging(string value);
        partial void OnFoodbeveragepwpitemasrequestonparentitemChanged();
        partial void OnFoodbeveragepwpitempriceChanging(System.Nullable<double> value);
        partial void OnFoodbeveragepwpitempriceChanged();
        #endregion

        public Tblfoodbeveragepwpitem()
        {
            this._Tblfoodbeverage  = default(EntityRef<Tblfoodbeverage>);
            this._Tblfoodbeverage1  = default(EntityRef<Tblfoodbeverage>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitempk in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemPK", Storage = "_Foodbeveragepwpitempk", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INT(10) NOT NULL AUTO_INCREMENT", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Foodbeveragepwpitempk
        {
            get
            {
                return this._Foodbeveragepwpitempk;
            }
            set
            {
                if (this._Foodbeveragepwpitempk != value)
                {
                    this.OnFoodbeveragepwpitempkChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitempk = value;
                    this.SendPropertyChanged("Foodbeveragepwpitempk");
                    this.OnFoodbeveragepwpitempkChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragecode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeverageCode", Storage = "_Foodbeveragecode", DbType = "VARCHAR(255)")]
        public string Foodbeveragecode
        {
            get
            {
                return this._Foodbeveragecode;
            }
            set
            {
                if (this._Foodbeveragecode != value)
                {
                    if (this._Tblfoodbeverage.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFoodbeveragecodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragecode = value;
                    this.SendPropertyChanged("Foodbeveragecode");
                    this.OnFoodbeveragecodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemcode in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemCode", Storage = "_Foodbeveragepwpitemcode", DbType = "VARCHAR(255)")]
        public string Foodbeveragepwpitemcode
        {
            get
            {
                return this._Foodbeveragepwpitemcode;
            }
            set
            {
                if (this._Foodbeveragepwpitemcode != value)
                {
                    if (this._Tblfoodbeverage1.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnFoodbeveragepwpitemcodeChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemcode = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemcode");
                    this.OnFoodbeveragepwpitemcodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemdescription in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemDescription", Storage = "_Foodbeveragepwpitemdescription", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepwpitemdescription
        {
            get
            {
                return this._Foodbeveragepwpitemdescription;
            }
            set
            {
                if (this._Foodbeveragepwpitemdescription != value)
                {
                    this.OnFoodbeveragepwpitemdescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemdescription = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemdescription");
                    this.OnFoodbeveragepwpitemdescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemalternatedescription in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemAlternateDescription", Storage = "_Foodbeveragepwpitemalternatedescription", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepwpitemalternatedescription
        {
            get
            {
                return this._Foodbeveragepwpitemalternatedescription;
            }
            set
            {
                if (this._Foodbeveragepwpitemalternatedescription != value)
                {
                    this.OnFoodbeveragepwpitemalternatedescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemalternatedescription = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemalternatedescription");
                    this.OnFoodbeveragepwpitemalternatedescriptionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepurchasewithpurchasebatch in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePurchaseWithPurchaseBatch", Storage = "_Foodbeveragepurchasewithpurchasebatch", CanBeNull = false, DbType = "INT(10) NOT NULL")]
        public int Foodbeveragepurchasewithpurchasebatch
        {
            get
            {
                return this._Foodbeveragepurchasewithpurchasebatch;
            }
            set
            {
                if (this._Foodbeveragepurchasewithpurchasebatch != value)
                {
                    this.OnFoodbeveragepurchasewithpurchasebatchChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepurchasewithpurchasebatch = value;
                    this.SendPropertyChanged("Foodbeveragepurchasewithpurchasebatch");
                    this.OnFoodbeveragepurchasewithpurchasebatchChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitempriceonparentitem in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemPriceOnParentItem", Storage = "_Foodbeveragepwpitempriceonparentitem", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepwpitempriceonparentitem
        {
            get
            {
                return this._Foodbeveragepwpitempriceonparentitem;
            }
            set
            {
                if (this._Foodbeveragepwpitempriceonparentitem != value)
                {
                    this.OnFoodbeveragepwpitempriceonparentitemChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitempriceonparentitem = value;
                    this.SendPropertyChanged("Foodbeveragepwpitempriceonparentitem");
                    this.OnFoodbeveragepwpitempriceonparentitemChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemhideonreceipt in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemHideOnReceipt", Storage = "_Foodbeveragepwpitemhideonreceipt", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepwpitemhideonreceipt
        {
            get
            {
                return this._Foodbeveragepwpitemhideonreceipt;
            }
            set
            {
                if (this._Foodbeveragepwpitemhideonreceipt != value)
                {
                    this.OnFoodbeveragepwpitemhideonreceiptChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemhideonreceipt = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemhideonreceipt");
                    this.OnFoodbeveragepwpitemhideonreceiptChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemasrequestonparentitem in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemAsRequestOnParentItem", Storage = "_Foodbeveragepwpitemasrequestonparentitem", CanBeNull = false, DbType = "VARCHAR(255) NOT NULL")]
        public string Foodbeveragepwpitemasrequestonparentitem
        {
            get
            {
                return this._Foodbeveragepwpitemasrequestonparentitem;
            }
            set
            {
                if (this._Foodbeveragepwpitemasrequestonparentitem != value)
                {
                    this.OnFoodbeveragepwpitemasrequestonparentitemChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemasrequestonparentitem = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemasrequestonparentitem");
                    this.OnFoodbeveragepwpitemasrequestonparentitemChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Foodbeveragepwpitemprice in the schema.
        /// </summary>
        [Column(Name = @"FoodBeveragePWPItemPrice", Storage = "_Foodbeveragepwpitemprice", DbType = "DOUBLE(15,2)")]
        public System.Nullable<double> Foodbeveragepwpitemprice
        {
            get
            {
                return this._Foodbeveragepwpitemprice;
            }
            set
            {
                if (this._Foodbeveragepwpitemprice != value)
                {
                    this.OnFoodbeveragepwpitempriceChanging(value);
                    this.SendPropertyChanging();
                    this._Foodbeveragepwpitemprice = value;
                    this.SendPropertyChanged("Foodbeveragepwpitemprice");
                    this.OnFoodbeveragepwpitempriceChanged();
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepwpitem", Storage="_Tblfoodbeverage", ThisKey="Foodbeveragecode", IsForeignKey=true)]
        public Tblfoodbeverage Tblfoodbeverage
        {
            get
            {
                return this._Tblfoodbeverage.Entity;
            }
            set
            {
                Tblfoodbeverage previousValue = this._Tblfoodbeverage.Entity;
                if ((previousValue != value) || (this._Tblfoodbeverage.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeverage.Entity = null;
                        previousValue.Tblfoodbeveragepwpitems.Remove(this);
                    }
                    this._Tblfoodbeverage.Entity = value;
                    if (value != null)
                    {
                        this._Foodbeveragecode = value.Foodbeveragecode;
                        value.Tblfoodbeveragepwpitems.Add(this);
                    }
                    else
                    {
                        this._Foodbeveragecode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeverage");
                }
            }
        }

        [Devart.Data.Linq.Mapping.Association(Name="Tblfoodbeverage_Tblfoodbeveragepwpitem1", Storage="_Tblfoodbeverage1", ThisKey="Foodbeveragepwpitemcode", IsForeignKey=true)]
        public Tblfoodbeverage Tblfoodbeverage1
        {
            get
            {
                return this._Tblfoodbeverage1.Entity;
            }
            set
            {
                Tblfoodbeverage previousValue = this._Tblfoodbeverage1.Entity;
                if ((previousValue != value) || (this._Tblfoodbeverage1.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging();
                    if (previousValue != null)
                    {
                        this._Tblfoodbeverage1.Entity = null;
                        previousValue.Tblfoodbeveragepwpitems1.Remove(this);
                    }
                    this._Tblfoodbeverage1.Entity = value;
                    if (value != null)
                    {
                        this._Foodbeveragepwpitemcode = value.Foodbeveragecode;
                        value.Tblfoodbeveragepwpitems1.Add(this);
                    }
                    else
                    {
                        this._Foodbeveragepwpitemcode = default(string);
                    }
                    this.SendPropertyChanged("Tblfoodbeverage1");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(String propertyName) 
        {
            if (this.PropertyChanging != null)
                this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
             if (this.PropertyChanged != null)
                 this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
